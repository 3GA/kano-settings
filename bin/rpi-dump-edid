#!/usr/bin/env python

# rpi-dump-edid
#
# Copyright (C) 2017 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU GPL v2
#
# This is a simple tool to get the raw EDID of a screen attachd to the RPi.
# The file is output to the /boot/ partition for easy access.
#
# This tool was used for all screen data under kano-settings/res/edid/raw
# Requires sudo, RPi, and a screen.


import os
import sys

from kano.utils.shell import run_cmd

from kano_settings.paths import RAW_EDID_NAME_PATTERN


RC_SUCCESS = 0
RC_WRONG_PERMISSIONS = 1
RC_ERR_SUBPROCESS = 2


def main():
    """
    Main program.
    """

    # Get the screen model name.
    out, err, rc = run_cmd('tvservice --name')
    if rc:
        sys.stderr.write(
            'Error: Could not get the screen model!\n rc = {}\n err = {}\n'.format(rc, err)
        )
        return RC_ERR_SUBPROCESS

    # If the EDID is corrupt, the proc might return '[E] No device present'.
    if 'device_name' in out:
        model = out.strip('device_name=').strip()
    else:
        model = 'UNKNOWN'

    tmp_edid_path = os.path.join('/boot', RAW_EDID_NAME_PATTERN.format(filename=model))

    # Dump the raw EDID at a temporary path.
    out, err, rc = run_cmd('tvservice --dumpedid {}'.format(tmp_edid_path))
    if rc:
        sys.stderr.write(
            'Error: Could not get the screen EDID!\n rc = {}\n err = {}\n'.format(rc, err)
        )
        return RC_ERR_SUBPROCESS

    # Calculate the md5 sum of the raw EDID. Different screens may have the
    # same model, but different characteristics.
    out, err, rc = run_cmd('md5sum {}'.format(tmp_edid_path))
    if rc:
        sys.stderr.write(
            'Error: Could not calculate md5 sum for {}!\n rc = {}\n err = {}\n'
            .format(tmp_edid_path, rc, err)
        )
        return RC_ERR_SUBPROCESS

    md5sum = out.split(' ', 1)[0]
    model_md5 = '{}-{}'.format(model, md5sum)

    # Rename the file to [model-name]-[md5sum].edid
    edid_path = os.path.join('/boot', RAW_EDID_NAME_PATTERN.format(filename=model_md5))
    os.rename(tmp_edid_path, edid_path)

    print 'Generated', edid_path


if __name__ == '__main__':
    if os.geteuid() != 0:
        print 'Program must be run as root.'
        sys.exit(RC_WRONG_PERMISSIONS)

    sys.exit(main() or RC_SUCCESS)
