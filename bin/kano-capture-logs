#!/usr/bin/env python
# kano-capture_logs
#
# Copyright (C) 2016 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# Copy logs to /boot if there is enough space
# Then play a sound to indicate that it has happened

import os
import subprocess
from kano.utils.audio import play_sound

LOG_DEST = "/tmp/support_logs.tgz"
LOG_OUTPUT = "/tmp/support_logs_log.txt"

SOUND_FILE = "/usr/share/kano-settings/media/sounds/kano_logs_saved.wav"

# Ensure we have some space left in /boot after writing logs
SPACE_MARGIN = 10000


def store_logging_error():
    return os.system("tar czf {} {}".format(LOG_DEST, LOG_OUTPUT))


def get_logs():
    rc = os.system("USER=root LOGNAME=root HOME=/root kano-feedback-cli {} >{} 2>&1".format(
        LOG_DEST, LOG_OUTPUT))
    if rc != 0:
        rc = store_logging_error()
    return rc


def get_log_size():
    return os.stat(LOG_DEST).st_size / 1024


def get_boot_space():
    lines = subprocess.check_output(
        "df -k /boot/ --output=avail".split(" ")).split("\n")
    return int(lines[1])


get_logs()

if (get_boot_space()-get_log_size()) > SPACE_MARGIN:
    os.system("cp {} /boot".format(LOG_DEST))
    play_sound(SOUND_FILE)
